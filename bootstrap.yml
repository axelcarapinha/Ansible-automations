---
# Prepare the servers to be accessed by Ansible for further configurations
# and install basic packages

- hosts: all
  become: true
  pre_tasks: # Ensures a start with packages up to date

  # This avoids the need of udpating the cache before every other task
  - name: install updates (CentOS)
    tags: always
    yum:
      update_only: yes
      update_cache: yes
    changed_when: false # does NOT consider this a change, for a cleaner output
    when: ansible_distribution == "CentOS"

  - name: install updates (Ubuntu) # in case I end up using Ubuntu servers
    tags: always
    apt:
      upgrade: dist
      update_cache: yes
    changed_when: false
    when: ansible_distribution == "Ubuntu"


# dnf package manager is already default in version 8 (and above) of CentOS,
# so this installation was NOT done in CentOS version 7 (the previous Ansible play)
- hosts: all
  become: true
  pre_tasks:
    - name: install pre-requisites for dnf (CentOS)
      tags: 
        - dnf
        - python
        - centos
      yum:
        name:
          - python3
          - python3-dnf
        state: present
      when: ansible_distribution == "CentOS" and ansible_distribution_version|int >= 8

    - name: install dnf (CentOS)
      tags: 
        - dnf
        - python
        - centos
      pip:
        name: dnf # Dandified Yum
      when: ansible_distribution == "CentOS" and ansible_distribution_version|int >= 8

    - name: set Python3 as the Python interpreter (CentOS)
      tags: 
        - dnf
        - python
        - centos
      set_fact:
        ansible_python_interpreter: /usr/bin/python3
      when: ansible_distribution == "CentOS" and ansible_distribution_version|int >= 8

    - name: enable EPEL repo (CentOS)
      tags: 
        - epel
        - centos
      yum:
        name: epel-release
        state: present
      when: ansible_distribution == "CentOS" and ansible_distribution_version|int >= 8


- hosts: all
  become: true
  tasks:

  - name: install basic packages (CentOS) # my common general needs
    tags: start
    package:
      name:
        - bash-completion
        - bind-utils
        - curl
        - epel-release
        - fail2ban 
        - firewalld
        - gcc
        - git
        - lsof
        - nano
        - net-tools
        - nmap
        - python3
        - rsync
        - sysstat
        - tar
        - tcpdump
        - telnet
        - tmux
        - tree
        - unzip
        - vim
        - wget
        - yum-utils
      state: latest
      update_cache: yes

  - name: create ansible user (hermes)
    tags: always
    user:
      name: hermes
      groups: root

  - name: add ssh public key for the ansible user (hermes)
    tags: always
    authorized_key:
      user: hermes
      key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKjEtWmm5F6fCRsdGWDM8ZQP51OYj07zLO7XGqZBLyJV ansible"

  - name: add sudoers file for the ansible user (hermes)
    tags: always
    copy:
      src: sudoer_hermes
      dest: /etc/sudoers.d/hermes
      owner: root
      group: root
      mode: 0440
  
  # The 'blockinfile' module offers a marker option, 
  # but I considered it unnecessarily complex for this situation
  # so I marked in the line itself
  - name: ensure 'LogLevel INFO' on the remote host - ssh
    tags: 
      - bootstrap
      - here
    ansible.builtin.lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^#?LogLevel'
      line: LogLevel INFO # Update by Ansible
      state: present


- hosts: web_servers
  become: true
  tasks:

  - name: install basic packages (CentOs)
    tags: always
    package:
      name:
        - httpd
        - nginx
      state: latest
      update_cache: yes


- hosts: db_servers
  become: true
  tasks:

  - name: install basic packages (CentOs)
    tags: always
    package:
      name:
        - mariadb-server
        - postgresql-server
      state: latest
      update_cache: yes
